<?php

namespace App\Transformers;

use Devesharp\CRUD\Transformer;

class ServiceTransformer extends Transformer
{
    public $model = \App\Models\Service::class;

    /**
     * @param $model
     * @param string $context
     * @param null $requester
     * @return mixed
     * @throws \Exception
     */
    public function transform(
        $model,
        string $context = 'default',
        $requester = null
    ) {
        if (! $model instanceof $this->model) {
            throw new \Exception('invalid model transform');
        }

        if ($context === 'model')
            return $model;

//        // Cache Repository
//        $this->loadFoo([1]);
//        $foo = $this->transformer->getFoo(1);

        $transform = $model->toArray();

        $transform['updated_at'] = (string) $model->updated_at;
        $transform['created_at'] = (string) $model->created_at;

        return $transform;
    }

//    // Repository Mock
//    public function loadFoo(array $users)
//    {
//        $this->loadResource('foo', app(RepositoryFooStub::class), $users);
//    }
}
